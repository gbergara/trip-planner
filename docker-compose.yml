version: '3.8'

services:
  trip-planner:
    build: .
    container_name: trip-planner-app
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app    # Mount source for development (optional)
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=cockroachdb://root@cockroachdb:26257/trip_planner?sslmode=disable
      - DB_DEBUG=false
    depends_on:
      alembic-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
    # Traefik labels removed

  # Test runner service
  trip-planner-test:
    build: .
    container_name: trip-planner-test
    environment:
      - TESTING=true
      - DATABASE_URL=postgresql://test_user:test_pass@postgres-test:5432/trip_planner_test
    depends_on:
      postgres-test:
        condition: service_healthy
    command: python -m pytest -v
    profiles: ["test"]

  # PostgreSQL test database
  postgres-test:
    image: postgres:15-alpine
    container_name: trip-planner-postgres-test
    environment:
      - POSTGRES_DB=trip_planner_test
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_pass
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d trip_planner_test"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles: ["test"]


  # CockroachDB Database
  cockroachdb:
    image: cockroachdb/cockroach:v23.1.14
    container_name: trip-planner-cockroachdb
    command: start-single-node --insecure --store=attrs=ssd,path=/cockroach/cockroach-data --http-addr=0.0.0.0:8080
    volumes:
      - cockroach_data:/cockroach/cockroach-data
    ports:
      - "26257:26257"  # SQL port
      - "8081:8080"    # Admin UI port (changed to avoid conflict with Traefik)
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  # Database initialization service
  cockroach-init:
    image: cockroachdb/cockroach:v23.1.14
    container_name: trip-planner-cockroach-init
    command: sql --insecure --host=cockroachdb --execute="CREATE DATABASE IF NOT EXISTS trip_planner;"
    depends_on:
      cockroachdb:
        condition: service_healthy
    restart: "no"

  # Alembic database migration service
  alembic-migrate:
    build: .
    container_name: trip-planner-migrate
    environment:
      - DATABASE_URL=cockroachdb://root@cockroachdb:26257/trip_planner?sslmode=disable
    command: alembic upgrade head
    depends_on:
      cockroach-init:
        condition: service_completed_successfully
    restart: "no"

  # Optional: Redis for caching and sessions
  # redis:
  #   image: redis:7-alpine
  #   container_name: trip-planner-redis
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

volumes:
  cockroach_data:  # CockroachDB data volume

networks:
  default:
    name: trip-planner-network
